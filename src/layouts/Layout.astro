---
import Footer from "@sections/Footer.astro";
import Header from "@sections/Header.astro";
import '@styles/global.css';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="description" content="Portafolio donde se expondran proyectos y habilidades de Carlos Moreno con el fin de darse a conocer en el mundo del desarrollo" />

		<meta name="twitter:card" content="sumary_large_image"/>
		<meta name="twitter:site" content="@portafolioCarlosMoreno"/>
		<meta name="twitter:creator" content="@carlosMoreno"/>
		<meta name="twitter:title" content="Portafolio Carlos Moreno"/>
		<meta name="twitter:description" content="Portafolio de Carlos Moreno"/>

		<meta property="og:title" content="Portafolio Carlos Moreno"/>
		<meta property="og:description" content="Portafolio de Carlos Moreno"/>
		<meta property="og:image" content="/images/portafolio.png"/>
		<meta property="og:locale" content="es_ES"/>
		<meta property="og:type" content="website"/>

		<title>Portafolio Carlos Moreno</title>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	</head>
	<body>
		<div id="bg-clouds" class="absolute z-0 sky-bg inset-0 pointer-events-none bg-fade-center"/>
		<div id="bg-stars" class="absolute z-0 stars-bg inset-0 pointer-events-none bg-fade-center bg-fade-top"/>
		<Header/>
		<main>
			<slot />
		</main>
		<Footer/>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: auto;
		background: linear-gradient(to bottom, 
			#084887 0%,     /* Color s칩lido hasta el 60% */
			#084887 10%, 
			#010A13 70%
		);
		background-repeat: no-repeat;
	}
</style>

<script>
  function updateBackgroundHeights() {
    const bgClouds = document.getElementById('bg-clouds');
    const bgStars = document.getElementById('bg-stars');

    const viewportHeight = window.innerHeight;
    const bodyHeight = document.body.offsetHeight;
    const pageHeight = Math.max(bodyHeight, viewportHeight);

    const cloudsHeight = pageHeight * 0.6;

    if (bgClouds) {
      bgClouds.style.height = cloudsHeight + 'px';
      bgClouds.style.top = '0px';
    }

    if (bgStars) {
      bgStars.style.height = (pageHeight - cloudsHeight) + 'px';
      bgStars.style.top = cloudsHeight + 'px';
    }
  }

  function setupObservers() {
    // Llamar la funci칩n inicialmente
    updateBackgroundHeights();

    // Ajustar al redimensionar la ventana
    window.addEventListener('resize', updateBackgroundHeights);

    // Observar cambios en el DOM (como carga de contenido din치mico)
    const observer = new MutationObserver(() => {
      updateBackgroundHeights();
    });
    observer.observe(document.body, {
      childList: true,
      subtree: true,
      attributes: true,
      characterData: true,
    });

    // Observar cambios de tama침o en elementos (usando ResizeObserver)
    const resizeObserver = new ResizeObserver(() => {
      updateBackgroundHeights();
    });
    resizeObserver.observe(document.body);
  }

  document.addEventListener('DOMContentLoaded', setupObservers);
</script>
